{"version":3,"sources":["victory.svg","thumbs_up.svg","something.svg","hello.svg","utilities.js","LoveYou.js","Hello.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","loveYouGesture","GestureDescription","addCurl","Finger","Thumb","FingerCurl","NoCurl","addDirection","FingerDirection","HorizontalLeft","HorizontalRight","Index","VerticalUp","Pinky","Middle","Ring","FullCurl","VerticalDown","helloGesture","App","webcamRef","useRef","canvasRef","useState","text","setText","loading","setLoading","emoji","setEmoji","images","thumbs_up","victory","i_love_you","something","hello","names","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","VictoryGesture","ThumbsUpGesture","estimate","undefined","gesture","gestures","name","confidence","map","maxConfidence","indexOf","max","apply","getContext","useEffect","className","ref","position","marginLeft","marginRight","left","right","textAlign","zindex","background","class","top","display","alignItems","justifyContent","fontSize","fontWeight","src","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.966f3cc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/victory.854a2217.svg\";","module.exports = __webpack_public_path__ + \"static/media/thumbs_up.03ee9e5f.svg\";","module.exports = __webpack_public_path__ + \"static/media/something.7318c9ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/hello.7bde1594.svg\";","// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n// Infinity Gauntlet Style\r\nconst style = {\r\n  0: { color: \"yellow\", size: 15 },\r\n  1: { color: \"gold\", size: 6 },\r\n  2: { color: \"green\", size: 10 },\r\n  3: { color: \"gold\", size: 6 },\r\n  4: { color: \"gold\", size: 6 },\r\n  5: { color: \"purple\", size: 10 },\r\n  6: { color: \"gold\", size: 6 },\r\n  7: { color: \"gold\", size: 6 },\r\n  8: { color: \"gold\", size: 6 },\r\n  9: { color: \"blue\", size: 10 },\r\n  10: { color: \"gold\", size: 6 },\r\n  11: { color: \"gold\", size: 6 },\r\n  12: { color: \"gold\", size: 6 },\r\n  13: { color: \"red\", size: 10 },\r\n  14: { color: \"gold\", size: 6 },\r\n  15: { color: \"gold\", size: 6 },\r\n  16: { color: \"gold\", size: 6 },\r\n  17: { color: \"orange\", size: 10 },\r\n  18: { color: \"gold\", size: 6 },\r\n  19: { color: \"gold\", size: 6 },\r\n  20: { color: \"gold\", size: 6 },\r\n};\r\n\r\n// Drawing function\r\nexport const drawHand = (predictions, ctx) => {\r\n  // Check if we have predictions\r\n  if (predictions.length > 0) {\r\n    // Loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      // Grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n          // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      // Loop through landmarks and draw em\r\n      for (let i = 0; i < landmarks.length; i++) {\r\n        // Get x point\r\n        const x = landmarks[i][0];\r\n        // Get y point\r\n        const y = landmarks[i][1];\r\n        // Start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n\r\n        // Set line color\r\n        ctx.fillStyle = style[i][\"color\"];\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n};\r\n","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const loveYouGesture = new GestureDescription('i_love_you'); \r\n\r\n// Thumb \r\nloveYouGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalLeft, 0.25);\r\nloveYouGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalRight, 0.25);\r\n\r\n// Index\r\nloveYouGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.25);\r\n\r\n// Pinky\r\nloveYouGesture.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0)\r\nloveYouGesture.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.25);\r\n\r\nfor(let finger of [Finger.Middle, Finger.Ring]){\r\n    loveYouGesture.addCurl(finger, FingerCurl.FullCurl, .75); \r\n    loveYouGesture.addDirection(finger, FingerDirection.VerticalDown, 0.25);\r\n}\r\n\r\n\r\n\r\n\r\n","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const helloGesture = new GestureDescription('hello');\r\n\r\n// Thumb \r\nhelloGesture.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.25)\r\nhelloGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalLeft, 0.25);\r\nhelloGesture.addDirection(Finger.Thumb, FingerDirection.HorizontalRight, 0.25);\r\n\r\n// Index\r\nhelloGesture.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0)\r\nhelloGesture.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.25);\r\n\r\n// Pinky\r\nhelloGesture.addCurl(Finger.Pinky, FingerCurl.NoCurl, 1.0)\r\nhelloGesture.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.25);\r\n\r\nfor(let finger of [Finger.Middle, Finger.Ring]){\r\n    helloGesture.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n    helloGesture.addDirection(finger, FingerDirection.VerticalUp, 0.25);\r\n}\r\n\r\n\r\n\r\n\r\n","\r\n\r\n\r\n///////// NEW STUFF ADDED USE STATE\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n///////// NEW STUFF ADDED USE STATE\r\n\r\n// import logo from './logo.svg';\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawHand } from \"./utilities\";\r\n\r\nimport {loveYouGesture} from \"./LoveYou\"; \r\nimport {helloGesture} from \"./Hello\";\r\n\r\n///////// NEW STUFF IMPORTS\r\nimport * as fp from \"fingerpose\";\r\nimport victory from \"./victory.svg\";\r\nimport thumbs_up from \"./thumbs_up.svg\";\r\nimport something from \"./something.svg\";\r\nimport hello from \"./hello.svg\";\r\n///////// NEW STUFF IMPORTS\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [text,setText] = useState('Loading');\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  ///////// NEW STUFF ADDED STATE HOOK\r\n  const [emoji, setEmoji] = useState(null);\r\n  const images = { thumbs_up: thumbs_up, victory: victory, i_love_you: something, hello:  hello};\r\n  const names = { thumbs_up: 'Thumbs Up', victory: 'Victory', i_love_you: 'I Love You', hello:  'Hello'};\r\n  ///////// NEW STUFF ADDED STATE HOOK\r\n\r\n  const runHandpose = async () => {\r\n    const net = await handpose.load();\r\n    console.log(\"Handpose model loaded.\");\r\n    //  Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 10);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width3q\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n      // Make Detections\r\n      const hand = await net.estimateHands(video);\r\n        setLoading(false);\r\n        setText('');\r\n        setEmoji('');\r\n      // console.log(hand);\r\n\r\n      ///////// NEW STUFF ADDED GESTURE HANDLING\r\n\r\n      if (hand.length > 0) {\r\n        const GE = new fp.GestureEstimator([\r\n          fp.Gestures.VictoryGesture,\r\n          fp.Gestures.ThumbsUpGesture,\r\n          loveYouGesture,\r\n            helloGesture\r\n        ]);\r\n        const gesture = await GE.estimate(hand[0].landmarks, 4);\r\n        if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n          console.log(gesture.gestures);\r\n          setText(names[gesture.gestures[0].name]);\r\n          const confidence = gesture.gestures.map(\r\n            (prediction) => prediction.confidence\r\n          );\r\n          const maxConfidence = confidence.indexOf(\r\n            Math.max.apply(null, confidence)\r\n          );\r\n          // console.log(gesture.gestures[maxConfidence].name);\r\n          setEmoji(gesture.gestures[maxConfidence].name);\r\n          console.log(emoji);\r\n\r\n        }\r\n      }\r\n\r\n      ///////// NEW STUFF ADDED GESTURE HANDLING\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n      drawHand(hand, ctx);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{runHandpose()},[]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n          {\r\n              loading &&\r\n              <div\r\n                  style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 0,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              zindex: 9,\r\n              width: 640,\r\n              height: 480,\r\n                      background: \"rgba(0,0,0,0.5)\"\r\n          }}>\r\n                 <div class=\"cssload-container\">\r\n\t<div class=\"cssload-circle-1\">\r\n\t\t<div class=\"cssload-circle-2\">\r\n\t\t\t<div class=\"cssload-circle-3\">\r\n\t\t\t\t<div class=\"cssload-circle-4\">\r\n\t\t\t\t\t<div class=\"cssload-circle-5\">\r\n\t\t\t\t\t\t<div class=\"cssload-circle-6\">\r\n\t\t\t\t\t\t\t<div class=\"cssload-circle-7\">\r\n\t\t\t\t\t\t\t\t<div class=\"cssload-circle-8\">\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n              </div>\r\n          }\r\n        {/* NEW STUFF */}\r\n        {/*{emoji !== null ? (\r\n          <img\r\n            src={images[emoji]}\r\n            style={{\r\n              position: \"absolute\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n              left: 400,\r\n              bottom: 500,\r\n              right: 0,\r\n              textAlign: \"center\",\r\n              height: 100,\r\n            }}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}*/}\r\n\r\n        {/* NEW STUFF */}\r\n      </header>\r\n      <div\r\n\r\n          style={{\r\n          position: 'fixed',\r\n          width: '20%',\r\n          height: '100%',\r\n          background: 'white',\r\n          left: 0,\r\n          top: 0,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center'\r\n      }} >\r\n          <div>\r\n              <div style={{\r\n                  fontSize: '20px',\r\n                  fontWeight: '600'\r\n              }}>{text}</div>\r\n              <img\r\n                  src={images[emoji]}\r\n                  style={{\r\n                      width: '50%',\r\n                      display: 'block',\r\n                      margin: '20px auto'\r\n                  }}\r\n              />\r\n          </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}